[build-system]
requires = ["setuptools>=69"]
build-backend = "setuptools.build_meta"

[project]
name = "shaarpy-fastapi"
version = "0.0.1"
description = "Shaarpy FastAPI: Share your thoughts, links, ideas, notes. self-hosting bookmarks and micro blogging. If you ever wanted Shaarli in python, that's it ^_* (w/ FastAPI)"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
authors = [{ name = "폭스마스크", email = "foxmask+git@pm.me" }]

classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: WTFPL",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Topic :: Communications",
    "Topic :: Database",
]

dependencies = [
    "bcrypt == 4.2.0",
    "fastapi == 0.115.4",
    "fastapi-csrf-protect == 0.3.6",
    "pydantic-settings == 2.6.1",
    "sqlmodel == 0.0.22",
    "newspaper3k == 0.2.8",
    "pypandoc == 1.14",
    "pytz == 2024.2",
    "lxml[html_clean] == 5.3.0",
    "python-slugify == 8.0.4",
    "python-multipart == 0.0.17",
]

[project.urls]
Homepage = "https://github.com/foxmask/shaarpy-fastapi/"
Documentation = "https://github.com/foxmask/shaarpy-fastapi/blob/main/README.md"
Source = "https://github.com/foxmask/shaarpy-fastapi/"

[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint]
select = [
    "F",   # pyflakes
    "DJ",  # flake8 django
    "E",   # pycodestyle
    "I",   # isort
    "ANN", # flake8 type annotations
    "RUF", # ruff-specific rules
]

[tool.ruff.lint.isort]
combine-as-imports = true

[project.optional-dependencies]
test = [
    "build",
    "wheel",
    "coverage",
    "pipdeptree",
    "twine",
    "bandit",
    "pip-audit",
]
lint = ["ruff == 0.7.3"]

[tool.setuptools.packages.find]
include = ["sharelink*"]
namespaces = false

[tool.setuptools]
include-package-data = false

[tool.coverage.run]
source_pkgs = ["sharelink", "tests"]

[tool.coverage.report]
#exclude_lines = [
#    "pragma: no cover",
#    "if typing.TYPE_CHECKING:",
#    "@typing.overload",
#    "raise NotImplementedError",
#]

#[tool.mypy]
#strict = true
#ignore_missing_imports = true
#python_version = "3.11"

#[tool.pytest.ini_options]
#addopts = "-rXs --strict-config --strict-markers"
#xfail_strict = true
